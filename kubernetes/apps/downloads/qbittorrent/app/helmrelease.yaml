---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: downloads
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 5.0.4@sha256:17e3e5f1c7e7fe81434f9d1f5f2e00da9a67f6dbfda1c988c0619932cb856047

    env:
      QBITTORRENT__PORT: &port 8080

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        hosts:
          - host: &host "qbittorrent.${SECRET_DOMAIN_LOCAL}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    metrics:
      enabled: true
      exporter:
        image:
          repository: docker.io/esanchezm/prometheus-qbittorrent-exporter
          tag: v1.6.0
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
      securityContext:
        seLinuxOptions:
          level: s0

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch

    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
        mountPath: /config
      data:
        enabled: true
        existingClaim: truenas-data-all
        mountPath: /data
      shared: # for the container to talk to its sidecar OPENVPN
        enabled: true
        type: emptyDir
        mountPath: /shared

    resources:
      requests:
        cpu: 100m
        memory: 400Mi
      limits:
        memory: 1Gi

    podAnnotations:
      setGateway: "true"
      backup.velero.io/backup-volumes-excludes: data
    
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.105.1
        workingDir: "/config"
        args:
          - --user-data-dir
          - "/config/.vscode"
          - --auth
          - "none"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: nginx
          hosts:
            - host: &host "qbconfig.${SECRET_DOMAIN_LOCAL}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host
        volumeMounts:
          - name: config
            mountPath: /config

